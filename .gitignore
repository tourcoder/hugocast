#macOS
*.DS_Store
.AppleDouble
.LSOverride

###Icon must end with two \r
Icon

###Thumbnails
._*

###Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

###Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

#Windows
###Windows thumbnail cache files
Thumbs.db
ehthumbs.db
ehthumbs_vista.db

###Folder config file
Desktop.ini

###Recycle Bin used on file shares
$RECYCLE.BIN/

###Windows Installer files
*.cab
*.msi
*.msm
*.msp

###Windows shortcuts
*.lnk

#Xcode
###Build generated
build/
DerivedData/

###Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/

###Other
*.moved-aside
*.xccheckout
*.xcscmblueprint

#sublimetext
###cache files for sublime text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

###workspace files are user-specific
*.sublime-workspace

###project files should be checked into the repository, unless a significant
###proportion of contributors will probably not be using SublimeText
###*.sublime-project

###sftp configuration file
sftp-config.json

###Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

###Sublime-github package stores a github token in this file
###https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings

#Vim
###swap
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-v][a-z]
[._]sw[a-p]

###session
Session.vim

###temporary
.netrwhist
*~

###auto-generated tag files
tags

#Nodejs
###Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

###Runtime data
pids
*.pid
*.seed
*.pid.lock

###Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

###Coverage directory used by tools like istanbul
coverage

###nyc test coverage
.nyc_output

###Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

###Bower dependency directory (https://bower.io/)
bower_components

###node-waf configuration
.lock-wscript

###Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

###Dependency directories
node_modules/
jspm_packages/

###Typescript v1 declaration files
typings/

###Optional npm cache directory
.npm

###Optional eslint cache
.eslintcache

###Optional REPL history
.node_repl_history

###Output of 'npm pack'
*.tgz

###Yarn Integrity file
.yarn-integrity

###dotenv environment variables file
.env

#Objective-C & Swift
###gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

####Build generated
build/
DerivedData/

####Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/

####Other
*.moved-aside
*.xccheckout
*.xcscmblueprint

####Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

###CocoaPods
#
###We recommend against adding the Pods directory to your .gitignore. However
###you should judge for yourself, the pros and cons are mentioned at:
###https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
Pods/

###Carthage
#
###Add this line if you want to avoid checking in source code from Carthage dependencies.
###Carthage/Checkouts

Carthage/Build

###fastlane
#
###It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
###screenshots whenever they are needed.
###For more information about the recommended setup visit:
###https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output

###Code Injection
#
###After new code Injection tools there's a generated folder /iOSInjectionProject
###https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

#C/C++
###Prerequisites
*.d

###Compiled Object files
*.slo
*.lo
*.o
*.obj

###Precompiled Headers
*.gch
*.pch

###Compiled Dynamic libraries
*.so
*.dylib
*.dll

###Fortran module files
*.mod
*.smod

###Compiled Static libraries
*.lai
*.la
*.a
*.lib

###Executables
*.exe
*.out
*.app

#Codeignter

*/config/development
*/logs/log-*.php
!*/logs/index.html
*/cache/*
!*/cache/index.html
!*/cache/.htaccess

user_guide_src/build/*
user_guide_src/cilexer/build/*
user_guide_src/cilexer/dist/*
user_guide_src/cilexer/pycilexer.egg-info/*

###codeigniter 3
application/logs/*
!application/logs/index.html
!application/logs/.htaccess
/vendor/

#Android

###Built application files
*.apk
*.ap_

###Files for the ART/Dalvik VM
*.dex

###Java class files
*.class

###Generated files
bin/
gen/
out/

###Gradle files
.gradle/
build/

###Local configuration file (sdk path, etc)
local.properties

###Proguard folder generated by Eclipse
proguard/

###Log Files
*.log

###Android Studio Navigation editor temp files
.navigation/

###Android Studio captures folder
captures/

###Intellij
*.iml
.idea/workspace.xml
.idea/tasks.xml
.idea/gradle.xml
.idea/dictionaries
.idea/libraries

###Keystore files
*.jks

###External native build folder generated in Android Studio 2.2 and later
.externalNativeBuild

###Google Services (e.g. APIs or Firebase)
google-services.json

###Freeline
freeline.py
freeline/
freeline_project_description.json

#VSCode
.vscode/
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

#VisualStudio
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/
**/Properties/launchSettings.json

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Typescript v1 declaration files
typings/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush
.cr/

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

#release
release-builds/
out/
dist/

#npm
package-lock.json
